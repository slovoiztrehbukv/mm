"ROOT"
type Query {
  batch(questionsQuantity: Int!, answersQuantity: Int!, categoryId: Int!) : Batch! @field(resolver: "App\\GraphQL\\Queries\\GetBatchResolver")
  categories: [Category!] @all
}

type Mutation {
  storeTempUserAnswers(input: StoreUserAnswersInput! @spread): UserAnswer! @create
}



"INPUTS"
input StoreUserAnswersInput {
  batch_id: Int
  answers_quantity: Int
  answers_ids: [Int]
}



"ELOQUENT TYPES"
type Category {
  id: ID!
  title: String
}

type Batch {
  id: ID!
  questions: [Question]
}

type Image {
  id: ID!
  url: String
}

type Question {
  id: ID!
  type: String
  title: String
  answers: [Answer]
}

type Answer {
  id: ID!
  value: String
  image: Image
}

type UserAnswer {
  id: ID!
  batch_id: Int
  user_id: Int
  answers_quantity: Int
  answers_ids: [Int]
  code: String
}